services:
  # Service MongoDB
  mongodb:
    image: mongo:latest
    container_name: task-manager-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # Service Backend (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-manager-backend
    restart: always
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/taskmanager?authSource=admin
      - JWT_SECRET=votre_secret_jwt
      - PORT=3000
    depends_on:
      - mongodb
    networks:
      - app-network

  # Service Frontend (Node.js/React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-manager-frontend
    restart: always
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    networks:
      - app-network

  # Service Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: task-manager-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: